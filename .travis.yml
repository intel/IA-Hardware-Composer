language: c++
sudo: required
dist: trusty
install:
- sudo apt-get update
- sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
- sudo apt-get update
- sudo apt-get install automake autoconf libtool xutils-dev libpciaccess-dev python-mako bison flex libomxil-bellagio-dev libexpat1-dev clang-format-3.5 llvm-dev gcc-4.9 g++-4.9 ninja-build python-pip
- sudo pip install pathlib
- sudo pip install meson
- sudo dpkg -s python-mako
- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 50
script:
- export LLVM_CONFIG=/usr/bin/llvm-config
- export HWC_BUILD_DIR=/tmp/
- export WLD=/tmp/hwc-install
- export LD_LIBRARY_PATH=$WLD/lib
- export PKG_CONFIG_PATH=$WLD/lib/pkgconfig/:$WLD/share/pkgconfig
- export PATH=$WLD/bin:$PATH
- export ACLOCAL_PATH=$WLD/share/aclocal
- export ACLOCAL="aclocal -I $ACLOCAL_PATH"
- export DRV_I915=1
- tar -xvf travisci/resources/hwc-install.tar.bz2 -C $HWC_BUILD_DIR
- mkdir -p $WLD/share/aclocal

#clone and build libdrm : dependency
- git clone https://github.com/intel/external-libdrm /tmp/libdrm
- pushd /tmp/libdrm
- ./autogen.sh --disable-radeon --disable-nouveau --disable-amdgpu --enable-udev --enable-libkms --prefix=$WLD
- make -j5 && make install
- popd

# #clone and build mesa : dependency
- git clone https://github.com/intel/external-mesa /tmp/mesa
- pushd /tmp/mesa
- ./autogen.sh --prefix=$WLD --with-platforms=surfaceless --disable-dri3 --enable-shared-glapi --disable-glx --disable-glx-tls --disable-gbm --without-gallium-drivers --with-dri-drivers=i965 --with-vulkan-drivers=intel
- make CFLAGS=-DSYS_memfd_create=319 CPPFLAGS=--std=c11 -j5 && make install
- popd

# #clone and build minigbm : dependency
- git clone https://github.com/intel/minigbm /tmp/minigbm
- pushd /tmp/minigbm
- export DRV_I915=1
- make CFLAGS=-DDRV_I915=1 -j5
- make install DESTDIR=$WLD LIBDIR=lib/
- popd

#clone and build libva : dependency
- git clone https://github.com/android-ia/libva.git /tmp/libva
- pushd /tmp/libva
- ./autogen.sh --prefix=$WLD
- make -j5 && make install
- popd

#clone and build vaapi : dependency
- git clone https://github.com/android-ia/vaapi.git /tmp/vaapi
- pushd /tmp/vaapi
- ./autogen.sh --prefix=$WLD
- make -j5 && make install
- popd

# finally, build the hardware composer itself
- ./autogen.sh --prefix=$WLD
- make -j5
- make clean
- ./autogen.sh --prefix=$WLD --disable-hotplug-support
- make -j5

# Test Weston plugin
- git clone git://anongit.freedesktop.org/wayland/wayland /tmp/wayland
- cd /tmp/wayland
- ./autogen.sh --prefix=$WLD
- make && make install
- popd

- git clone git://anongit.freedesktop.org/wayland/wayland-protocols /tmp/wayland-protocols
- pushd .
- cd /tmp/wayland-protocols
- ./autogen.sh --prefix=$WLD
- make install
- popd

- git clone git://git.sv.gnu.org/libunwind /tmp/libunwind
- pushd .
- cd /tmp/libunwind
- ./autogen.sh --prefix=$WLD
- make && make install
- popd

- git clone git://anongit.freedesktop.org/git/wayland/libinput /tmp/libinput
- pushd .
- cd /tmp/libinput
- meson --prefix=$WLD builddir/
- ninja -C builddir/
- ninja -C builddir/ install
- popd

#Build mesa with gbm and overwrite minigbm
- git clone https://github.com/intel/external-mesa /tmp/mesa-weston
- pushd /tmp/mesa-weston
- ./autogen.sh --prefix=$WLD --with-platforms=surfaceless,drm,wayland,x11 --disable-dri3 --enable-shared-glapi --disable-glx --disable-glx-tls --enable-gbm --without-gallium-drivers --with-dri-drivers=i965 --with-vulkan-drivers=intel --enable-gbm
- make CFLAGS=-DSYS_memfd_create=319 CPPFLAGS=--std=c11 -j5 && make install
- popd

#Build weston and weston plugin
- git clone https://anongit.freedesktop.org/git/wayland/weston.git /tmp/weston
- os/linux/weston/build_script.sh --apply-patches --weston-dir=/tmp/weston --iahwc-dir=$(pwd) --build

branches:
  only:
  - master
