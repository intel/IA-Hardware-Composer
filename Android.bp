// Copyright (C) 2015 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// =====================
// libdrmhwc_utils_pri.a
// =====================
cc_library_static {
    name: "libdrmhwc_utils_pri",

    srcs: ["worker.cpp"],

    cflags: [
        "-Wall",
        "-Werror",
    ],

    vendor: true,

}

// =====================
// hwcomposer.drm.so
// =====================
cc_defaults {
    name: "hwcomposer.drm_defaults_pri",

    shared_libs: [
        "libcutils",
        "libdrm",
        "libhardware",
        "liblog",
        "libsync",
        "libui",
        "libutils",
    ],

    static_libs: ["libdrmhwc_utils_pri"],

    cflags: [
        "-Wall",
        "-Werror",
    ],

    cppflags: [
        "-DHWC2_USE_CPP11",
        "-DHWC2_INCLUDE_STRINGIFICATION",
    ],

    relative_install_path: "hw",
    vendor: true,
}
cc_library_static {
    name: "drm_hwcomposer_pri",
    defaults: ["hwcomposer.drm_defaults_pri"],
    srcs: [
        "autolock.cpp",
        "resourcemanager.cpp",
        "drmdevice.cpp",
        "drmconnector.cpp",
        "drmcrtc.cpp",
        "drmdisplaycomposition.cpp",
        "drmdisplaycompositor.cpp",
        "drmencoder.cpp",
        "drmeventlistener.cpp",
        "drmhwctwo.cpp",
        "drmmode.cpp",
        "drmplane.cpp",
        "drmproperty.cpp",
        "hwcutils.cpp",
        "platform.cpp",
        "vsyncworker.cpp",
    ],
}

cc_library_shared {
    name: "hwcomposer.drm.pri",
    defaults: ["hwcomposer.drm_defaults_pri"],
    whole_static_libs: ["drm_hwcomposer_pri"],
    srcs: ["platformdrmgeneric.cpp"],
    cppflags: ["-DUSE_DRM_GENERIC_IMPORTER"],
}

cc_library_shared {
    name: "hwcomposer.intel",
    defaults: ["hwcomposer.drm_defaults_pri"],
    whole_static_libs: ["drm_hwcomposer_pri"],
    srcs: [
        "platformdrmgeneric.cpp",
        "platformminigbm.cpp",
    ],
    include_dirs: ["external/minigbm/cros_gralloc"],
}
